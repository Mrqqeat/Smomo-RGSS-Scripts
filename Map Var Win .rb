#==============================================================================
# ■ 变量窗口显示
#  作者：影月千秋
#  适用：VA
#  要求：Smomo Core 1.2+
#------------------------------------------------------------------------------
# ● 简介
#  在地图上显示变量，可以附加文字
#==============================================================================
# ● 使用方法
#   将此脚本插入到其他脚本以下，Main以上，在下方进行设置即可
#==============================================================================
# ● 更新
#   V 1.1 2014.06.11 打开菜单时隐藏
#   V 1.0 2014.02.08 新建
#==============================================================================
# ● 声明
#   本脚本来自【影月千秋】，使用、修改和转载请保留此信息
#==============================================================================

if $smomo.nil? || $smomo["Core"].nil? || $smomo["Core"] < 1.2
  msgbox "请先安装Smomo脚本核心！"; %x!start http://tinyurl.com/l9kvg2p!
elsif $smomo["MapVarWin"].nil?
$smomo["MapVarWin"] = 1.1

#==============================================================================
# ■ Smomo::VarWin
#==============================================================================
module Smomo::VarWin
  SWI = 0
  # 当此开关打开 才会显示变量
  # 如果想要一直显示 就设为0
  
  Var = [
  # 变量和显示方式
  #·填写方式
  # [[横坐标, 纵坐标], "显示模板", [需要显示的变量ID], 可省略{窗口背景是否可见}]
  # 最后一项如果省略 默认可见
  #  横纵坐标是显示位置左上角的坐标
  #  显示模板是sprintf使用的格式化字符串，对于不懂脚本的人：
  #    使用【%s】来代替变量，使用【%02d】控制变量格式
  #    看不懂的话 下面有例子
  #  需要显示的变量形如【[3,9,10]】依次显示三个变量
  #
  #·例子
  # 先假设1号变量的值为 19，2号为 4
  # 下面两个例子省略前后两个项目 但是实际操作时前面一个必须填写
  # "苹果有%s个, 香蕉有%s个",[1,2]
  #  显示为：苹果有19个, 香蕉有4个
  # "现在是%02d分%02d秒",[1,2]
  #  显示为：现在是19分04秒
  #
  #·特别说明
  # 显示模板中 允许使用跳脱字符和对话框用的控制符 但是控制符需要多些一个\
  #  比如\I[9]绘制九号图标 写成 \\I[9]
  # 换行符之类跳脱字符 原样写即可
  #  比如 \n 还是 \n
  
  # 模板 ↓  复制下面一行（或第二行） 填写后按Ctrl + Q即可生效
#~     [[0,0], "%04d.%02d.%02d", [1,2,3], false],
#~     [[0,0], "口袋上有%s个洞", [4]],
    
    [[0,0], "\\I[224]%04d年%02d月%02d日", [5,6,7], false],
    [[0,100],"我要填坑，\\{还有%s天！\\}",[8], true],
    [[0,200],"换个行看看吧╮(╯▽╰)╭\n再换个行\n变量的值：%s",[9]],
    
  ] # close the array
#=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+#
#-------------                     --------------------------------------------#
               "请勿跨过这块区域"
#-------------                     --------------------------------------------#
#+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=#
  Var.each_with_index{|v, i| Var[i][3] = true if v[3].nil?}
end

#==============================================================================
# ■ Window_MoVarShow
#==============================================================================
class Window_MoVarShow < Window_Base
  #--------------------------------------------------------------------------
  # ● 初始化
  #--------------------------------------------------------------------------
  def initialize(x, y, opa, format, *varid)
    @format, @varid = format, varid
    @vars ||= []
    @varid.each_with_index{|id, index| @vars[index] = $game_variables[id]}
    super(x, y, *window_size)
    self.openness = 0
    self.opacity = opa ? 255 : 0
    refresh
  end
  #--------------------------------------------------------------------------
  # ● 获取窗口合适的大小
  #--------------------------------------------------------------------------
  def window_size
    str = convert_escape_characters(sprintf(@format, *@vars))
    rect = Smomo.text_size(str)
    [rect.width + standard_padding * 2, rect.height + standard_padding * 2]
  end
  #--------------------------------------------------------------------------
  # ● 更新
  #--------------------------------------------------------------------------
  def update
    super
    if Smomo::VarWin::SWI == 0 || $game_switches[Smomo::VarWin::SWI]
      open if close?
      refresh if $game_map.need_refresh
    else
      close if open?
    end
  end
  #--------------------------------------------------------------------------
  # ● 刷新
  #--------------------------------------------------------------------------
  def refresh
    contents.clear
    @varid.each_with_index{|id, index| @vars[index] = $game_variables[id]}
    self.move(self.x, self.y, *window_size)
    draw_text_ex(0, 0, sprintf(@format, *@vars))
  end
end
#==============================================================================
# ■ Scene_Map
#==============================================================================
class Scene_Map
  _def_ :create_all_windows do |*args, &block|
    @mo_var_windows = Smomo::VarWin::Var.collect do |(pos, fmt, vars, opa)|
      Window_MoVarShow.new(*pos, opa, fmt, *vars)
    end
  end
  _def_ :update_all_windows do |*args, &block|
    @mo_var_windows.each {|w| w.update}
  end
  _def_ :call_menu, :b do |*args, &block|
    @mo_var_windows.each {|w| w.visible = false}
  end
end

else # unless $smomo["VarWin"]
  msgbox "请不要重复加载此脚本 : )\n(变量窗口显示 MapVarWin)"
end # unless $smomo["VarWin"]

#==============================================================================#
#=====                        =================================================#
           "脚 本 尾"
#=====                        =================================================#
#==============================================================================#
